import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from "recharts"
import { vulnerabilityTrendData } from "../mock-data"
import { memo } from "react"

const VulnerabilityTrendComponent = () => {
  const lineColors = {
    critical: "#E0004C", // Tech Magenta
    high: "#FFA726",     // Orange (kept for high visibility)
    medium: "#00A9E0",   // Tech Cyan
  }

  return (
    <ResponsiveContainer >
      <LineChart
        data={vulnerabilityTrendData}
        margin={{
          top: 5,
          right: 20,
          left: 0,
          bottom: 5,
        }}
      >
        <CartesianGrid strokeDasharray="3 3" stroke="#103A5C" />
        <XAxis dataKey="month" stroke="#7dd3fc" fontSize={10} />
        <YAxis stroke="#7dd3fc" fontSize={10} />
        <Tooltip
          contentStyle={{ backgroundColor: "#071e36", borderColor: "#00A9E0", borderRadius: "3px" }}
          itemStyle={{ color: "#e0e0e0" }}
          labelStyle={{ color: "#cbd5e1", marginBottom: "5px" }}
          cursor={{ stroke: "#00A9E0", strokeWidth: 1, strokeDasharray: "3 3" }}
        />
        <Legend
          iconSize={10}
          iconType="square"
          wrapperStyle={{ paddingTop: "10px", fontSize: "11px" }}
          formatter={(value, entry) => {
            const color = entry.color
            let label = ""
            if (value === "critical") label = "严重"
            else if (value === "high") label = "高危"
            else if (value === "medium") label = "中危"
            return <span style={{ color: color }}>{label}</span>
          }}
        />
        <Line type="monotone" dataKey="critical" stroke={lineColors.critical} strokeWidth={2} activeDot={{ r: 6, strokeWidth: 0, fill: lineColors.critical }} dot={{ r: 2, fill: lineColors.critical, strokeWidth: 0 }} />
        <Line type="monotone" dataKey="high" stroke={lineColors.high} strokeWidth={2} activeDot={{ r: 6, strokeWidth: 0, fill: lineColors.high }} dot={{ r: 2, fill: lineColors.high, strokeWidth: 0 }} />
        <Line type="monotone" dataKey="medium" stroke={lineColors.medium} strokeWidth={2} activeDot={{ r: 6, strokeWidth: 0, fill: lineColors.medium }} dot={{ r: 2, fill: lineColors.medium, strokeWidth: 0 }} />
      </LineChart>
    </ResponsiveContainer>
  )
}

export const VulnerabilityTrend = memo(VulnerabilityTrendComponent)
